const each = require('async/each');
const fs = require('fs');
const Tabletop = require('./tabletop.js');

// Documents to load and their content set name
const docs = {
  '11Y8eS_cyIQ7wlGj5mo7VEHf355ycEHePrdysPzTnVJw': 'base',
  '1K08sXHXyW7TAMXJnHOv9V3QtjxwjAf2-cvbaO-S2fDQ': 'horror',
};

let encounters = {};

// Result directory to store the generated files.
const dest = process.argv[3] || "./app/Encounters.tsx";

function parseEncounters(rows, contentSet) {
  console.log(`Parsing encounters for ${contentSet}`);
  rows.forEach(function(row) {
    if (row.Comment) {
      return;
    }
    console.log(row.name);
    encounters[row.name.toLowerCase()] = {
      name: row.name,
      tier: parseInt(row.tier),
      class: row.class,
      set: contentSet,
    };
  });
}

function output(err) {
  if (err) {
    throw err;
  }
  encounters = JSON.stringify(encounters, null, 2);
  encounters = encounters.replace(/'/g, '\\\'').replace(/"/g, "'");
  fs.writeFile(dest, "//GENERATED BY ./scripts/build_encounters.js\nexport const ENCOUNTERS: any = " + encounters + ";\n", (err) => {
    if (err) {
      console.log(err);
    } else {
      console.log("Saved to " + dest);
    }
  });
}

function main() {
  each(Object.keys(docs), (docID, callback) => {
    Tabletop.init({ // jshint ignore:line
      key: docID,
      wanted: ["Encounter"],
      simpleSheet: true,
      callback: (rows) => {
        parseEncounters(rows, docs[docID]);
        callback();
      },
    });
  }, output);
}

main();
